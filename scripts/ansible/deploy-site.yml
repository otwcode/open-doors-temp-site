---
- name: Deploy Open Doors temporary site
  hosts: otw
  remote_user: "{{ remote_user }}"

  vars:
    repo: https://github.com/otwcode/open-doors-temp-site.git
    deploy_path: "{{ remote_path }}/{{ sitekey }}"
    puma_line: "{{ sitekey }},{{ remote_user }}"

  tasks:
  - name: Delete directory if it exists to start with a clean copy
    file:
      path: "{{ deploy_path }}"
      state: absent

  - name: Create directory on Open Doors site
    file:
      path: "{{ deploy_path }}"
      owner: "{{ remote_user }}"
      group: "{{ remote_group }}"
      state: directory

  - name: Clone code from Github
    git:
      repo: "{{ repo }}"
      dest: "{{ deploy_path }}"
      depth: 1 # Don't retrieve history
      accept_hostkey: yes
      update: yes
      version: deploy

  - name: Remove .git directory so the repo can't be inadvertently updated
    file:
      path: "{{ deploy_path }}/.git"
      state: absent

  # Config
  - name: Check if site conf already exists
    local_action: stat path=../config/{{ sitekey }}.yml
    register: config_file
    ignore_errors: yes

  - name: Create local config file
    local_action: template src=config.yml.j2 dest="{{ playbook_dir }}/../config/{{ sitekey }}.yml"
    when: not(config_file.stat.exists)

  - name: Copy site config
    copy:
      src: "{{ playbook_dir }}/../config/{{ sitekey }}.yml"
      dest: "{{ deploy_path }}/config/config.yml"

  - name: Copy secrets
    copy:
      src: "{{ playbook_dir }}/../../config/secrets.yml"
      dest: "{{ deploy_path }}/config/secrets.yml"


  # Copy puma.conf
  - name: Check if puma.conf already has the line
    replace:
      dest: /etc/puma.conf
      replace: '{{ puma_line }}'
      regexp: '{{ puma_line }}-$'
      backup: yes
    become: yes
    register: site_already_registered

  - name: Register site in puma.conf if it is new
    lineinfile:
     state: present
     dest: /etc/puma.conf
     line: '{{ puma_line }}'
     regexp: ''
     insertafter: EOF
    become: yes
    when: site_already_registered.changed == false

  - name: Fix line if regex above replaced it
    lineinfile:
      state: present
      dest: /dir/file
      line: '{{ puma_line }}'
      regexp: '{{ puma_line }}-$'
    become: yes
    when: site_already_registered.changed

  # Create folders
  - name: Create log, pid and socket folders for Puma
    file:
      dest: "{{ deploy_path }}/{{ item }}"
      state: directory
    with_items:
      - log
      - runtime/sockets
      - runtime/pids

  # Copy start and stop script, install and start
  - name: Create startup script
    template:
      src: start.sh.j2
      dest: "{{ deploy_path }}/start.sh"
      mode: "u=rwx,g=rw,o=rw"

  - name: Create stop script
    template:
      src: stop.sh.j2
      dest: "{{ deploy_path }}/stop.sh"
      mode: "u=rwx,g=rw,o=rw"

  - name: Install bundle
    command: bundle install --deployment
    args:
      chdir: "{{ deploy_path }}"

  - name: Start website
    command: ./start.sh
    args:
      chdir: "{{ deploy_path }}"
