---
- name: Provision new web server for Open Doors sites
  hosts: all
  user: root
  become: yes
  become_method: sudo
  gather_facts: no

  pre_tasks:
    - name: Update apt-get
      raw: sudo apt-get update

    - name: Install Python 2 for Ansible
      raw: sudo apt-get -y install python

    - name: Create a secondary, non-root user
      user:
        name: "{{ opendoors_user }}"
        password: "{{ remote_pw_hash }}"
        group: www-data

    - name: Add remote authorized key to allow future passwordless logins
      authorized_key:
        user: "{{ opendoors_user }}"
        key: "{{ lookup('file', local_ssh_path) }}"

    - name: Add normal user to sudoers
      lineinfile:
        dest: /etc/sudoers
        regexp: "{{ opendoors_user }} ALL"
        line: "{{ opendoors_user }} ALL=(ALL) NOPASSWD: ALL"
        state: present

    - name: Enable Bash as shell for normal user
      command: chsh -s /bin/bash {{ opendoors_user }}

    - action: setup

  tasks:
    - name: Set the timezone for the server to UTC
      timezone:
        name: UTC

    - name: Set up the unique hostname
      hostname: name={{ remote_hostname }}

    - name: Add the server's domain to the hosts file
      lineinfile:
        dest: /etc/hosts
        regexp: ".*opendoors$"
        line: "127.0.0.1 opendoors {{ remote_hostname }}"
        state: present

    - name: Install apps
      apt:
        name:
        - nginx
        - python-pip
        - python-setuptools
        - python-mysqldb
        - mysql-server-5.7
        - redis-server
        state: present

    - name: Install Docker Module for Python
      pip:
        name:
        - docker

#     Install Docker
    - name: Install repository key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add docker source registry
      apt_repository:
        repo: 'deb https://download.docker.com/linux/ubuntu xenial stable'
        state: present

    - name: Install docker and dependencies
      apt:
        name: docker-ce
        update_cache: yes

    # Configure Redis and MySQL to bind to the correct ports
    - name: Copy Redis config
      copy:
        src: "{{ playbook_dir }}/../provision/etc/redis/redis.conf"
        dest: /etc/redis/

    - name: Copy MySQL config
      template:
        src: "{{ playbook_dir }}/../provision/etc/mysql/my.cnf.j2"
        dest: "/etc/mysql/my.cnf"

    - name: Turn on Nginx, Docker and MySQL set them to run on boot
      service: name={{ item }} state=restarted enabled=yes
      with_items:
        - nginx
        - docker
        - mysql
        - redis

    - name: Create a new user for connections
      mysql_user:
        name: "{{ mysql_user }}"
        password: "{{ mysql_pw }}"
        priv: "*.*:ALL"
        login_password: "{{ mysql_root_pw }}"
        state: present

    # Nginx
    - name: Copy Nginx config
      template:
        src: "{{ playbook_dir }}/../provision/nginx/sites-available/opendoors-sites.j2"
        dest: "/etc/nginx/sites-available/{{ remote_hostname }}"

    - name: Symlink from sites-enabled Nginx config
      file:
        src: "/etc/nginx/sites-available/{{ remote_hostname }}"
        dest: "/etc/nginx/sites-enabled/{{ remote_hostname }}"
        state: link

    # Permissions
    - name: Chown /var/www
      file:
        dest: /var/www
        group: www-data
        mode: g+rw
        recurse: yes

    - name: Copy static files
      copy:
        src: "{{ item }}"
        dest: /var/www
      with_fileglob:
        - "{{ playbook_dir }}/../provision/var/www/**/*"
