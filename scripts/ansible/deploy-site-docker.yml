---
- name: Deploy Open Doors temporary site for '{{ sitekey }}'
  hosts: all
  remote_user: "{{ opendoors_user }}"
  become: yes

  vars:
    repo: https://github.com/otwcode/open-doors-temp-site.git
    deploy_path: "{{ remote_path }}/{{ sitekey }}"
    footer_version: "master"
    site_image_tag: "master"
    site_image_name: otwcode/open-doors-temp-site
    site_image_tar: "{{ sitekey }}-open-doors-temp-site.tar"

  tasks:
  - name: Create directory on Open Doors site
    file:
      path: "{{ deploy_path }}"
      owner: "{{ opendoors_user }}"
      group: "{{ remote_group }}"
      state: directory

  - name: Get git info on currently checked out branch to tag image
    command: git rev-parse --abbrev-ref HEAD
    register: gitinfo
    delegate_to: 127.0.0.1
    become: no

  - name: Build image and archive it
    docker_image:
      name: "{{ site_image_name }}"
      tag: "{{ gitinfo.stdout }}"
      archive_path: "{{ site_image_tar }}"
      build:
        path: ../..
        args:
          SITEKEY: "{{ sitekey }}"
        pull: no
      source: build
    delegate_to: 127.0.0.1
    become: no

  - name: Copy tar image to remote host
    copy:
      src: "{{ site_image_tar }}"
      dest: "{{ deploy_path }}"

  - name: Load site container
    docker_image:
      name: "{{ site_image_name }}"
      tag: "{{ gitinfo.stdout }}"
      load_path: "{{ deploy_path }}/{{ site_image_tar }}"
      source: load

  - name: Launch site container
    docker_container:
      name: "{{ sitekey }}"
      image: "{{ site_image_name }}:{{ gitinfo.stdout }}"
      state: started
      exposed_ports:
        - "{{ site_port }}"
      published_ports:
        - "{{ site_port }}:{{ site_port }}"
      env:
        SITEKEY: "{{ sitekey }}"


  # Config
  - name: Copy MySQL script
    template:
      src: "{{ playbook_dir }}/templates/archive_config.sql.j2"
      dest: "{{ deploy_path }}/archive_config.sql"
    tags:
      - database

  - name: Load sample data into MySQL
    mysql_db:
      name: "{{ sitekey }}"
      state: import
      target: "{{ deploy_path }}/archive_config.sql"
      login_password: "{{ mysql_root_pw }}"
    tags:
      - database
    
#  - name: Run migrations
#    command: docker exec {{ sitekey }} "bundle exec rake db:migrate"
#    args:
#      chdir: "{{ deploy_path }}"
#    tags:
#      - database
#
  - name: Create Open Doors user for the site
    command: docker exec {{ sitekey }} bundle exec rake users:create_user["Open Doors","{{ opendoors_site_user_email }}","{{ opendoors_site_user_pw }}"]
    args:
      chdir: "{{ deploy_path }}"
    environment:
      RAILS_ENV: production
#    when: create_database
    tags:
      - database

  - debug: 
      msg: ~~~~~~~ START APP ~~~~~~~~~

  - name: Change file ownership, group and permissions
    file:
      path: "{{ deploy_path }}/{{ item }}"
      state: touch
    loop:
      - "{{ sitekey }}-access.log"
      - "{{ sitekey }}-error.log"

  - name: Add entry for site in Nginx config
    blockinfile:
      path: /etc/nginx/sites-available/{{ remote_hostname }}
      insertafter: "# BEGIN OPENDOORS SITES"
      marker: "# {mark} ANSIBLE MANAGED BLOCK {{ site_name }}"
      block: |

        # Site: {{ site_name }}
        location ~ /{{ sitekey }}/?(.*)? {
          access_log {{ deploy_path }}/{{ sitekey }}-access.log;
          error_log {{ deploy_path }}/{{ sitekey }}-error.log;
          rewrite ^\/(.*) /$1 break;
          proxy_pass http://localhost:{{ site_port }};
        }

  - name: Restart Nginx
    service:
      name: nginx
      state: restarted
      enabled: yes
