## Place all the behaviors and hooks related to the matching controller here.
## All this logic will automatically be available in application.js.
## You can use CoffeeScript in this file: http://coffeescript.org/

@debug = (data) ->
  console.log JSON.stringify(data, null, 4)


@clearAllMessages = (authorId) ->
  console.log("clear all messages")
  $("#author-" + authorId + " .message").empty()


# HTML helpers
@divClass = (status) ->
  debug(status)
  if status in ["ok", "created", "success", "found"]
    divClass = "alert alert-info"
  else
    divClass = "alert alert-danger"

@alertHTML = (status, message) ->
  "<div class=\"#{divClass(status)}\" role=\"alert\">#{message}</div>"

@ao3linkHTML = (url) ->
  "<a href=\"#{url}\" target=\"_blank\">#{url}</a>"

@importButtonHTML = (type, itemId) ->
  "<a id=\"item-import-#{type}-#{itemId}\" class=\"btn-sm btn-import\" data-method=\"post\" data-button=\"import\" data-item=\"#{itemId}\" data-type=\"#{type}\" data-remote=\"true\" href=\"/items/import/#{type}/#{itemId}\">Import</a>"

@disableButton = (button) ->
  button.addClass("progress-bar-striped progress-bar-animated")
  button.prop("disabled", true)

@enableButton = (button) ->
  button.removeClass("progress-bar-striped progress-bar-animated")
  button.prop("disabled", false)
  
@toggleToShowAll = (buttons, allImportedAuthors) ->
# Alphabetical paginate sometimes duplicates the button because it's in its div so need to grab all
  buttons = $(".btn-hide-all")
  allImportedAuthors = $("article.imported")
  buttons.text "Show imported authors"
  buttons.attr("data-button", "showAllImported")
  allImportedAuthors.hide()

@toggleToHideAll = (buttons, allImportedAuthors) ->
# Alphabetical paginate sometimes duplicates the button because it's in its div so need to grab all
  buttons = $(".btn-hide-all")
  allImportedAuthors = $("article.imported")
  buttons.text "Hide imported authors"
  buttons.attr("data-button", "hideAllImported")
  allImportedAuthors.show()

  
# Functions that get stuff done
@refreshAudit = (type, itemId) ->
  if (type? && itemId?)
    itemAudit = $("#audit-#{type}-#{itemId}")
    path = window.location.pathname
    host = window.location.protocol + "//" + window.location.host

    myRegexp = /(?:\/)(.*?)(?:\/|$)/g
    match = myRegexp.exec(path)
    sitename = match[1]
    $.ajax
      type: "GET"
      url: "#{host}/#{sitename}/items/audit/#{type}/#{itemId}"
      dataType: "text"

      success: (data, status, xhr) ->
        itemAudit.html data
        $("#info-img-#{type}-#{itemId}").show()
      error: (data, status, error) ->
        console.log("Refresh audit error: #{error}")
      complete : (xhr, status) ->
        console.log("Refresh audit complete")


@writeItemToDiv = (type, status, itemId, message, url) ->
  messageDiv = $("#" + type + "-" + itemId + " .message")
  messageDiv.html alertHTML(status, message)
  mainDiv = $("#" + type + "-" + itemId)

  if status in ["created", "already_imported", "found"]
    console.log("found")
    mainDiv.addClass("imported")
    importButton = $("#import-#{type}-#{itemId}")
    importButton.html ao3linkHTML(url)
  if status in ["bad_request", "not_found"]
    console.log("not found")
    mainDiv.removeClass("imported")
    importButton = $("#import-#{type}-#{itemId}")
    importButton.html @importButtonHTML(type, itemId)


@writeSummaryToDiv = (data, summaryTargetDiv, status, authorId) ->
  console.log "\nwriteSummaryToDiv"
  debug(data)
  summary = []
  if data[0] && data[0]["messages"]
    summary.push(data[0]["messages"])
  if data[1] && data[1]["messages"]
    summary.push(data[1]["messages"])
  if summary.length > 0
    summaryTargetDiv.html alertHTML(status, summary.join("<br/>"))


@processImportResponse = (data) ->
  console.log("\nprocessImportResponse")
  debug(data[0]["works"])
  if data[0].hasOwnProperty("works")
    data[0]["works"].forEach( (item, idx) ->
      refreshAudit("story", item["original_id"])
      writeItemToDiv("story", item["status"], item["original_id"], item["messages"].join("<br/>"), item["archive_url"])
    )
  # Bookmarks might be in 0 if it's an individual import, or in 1 if it's an author import
  if data[0].hasOwnProperty("bookmarks")
    data[0]["bookmarks"].forEach( (item, idx) ->
      debug(item)
      refreshAudit("bookmark", item["original_id"])
      writeItemToDiv("bookmark", item["status"], item["original_id"], item["messages"].join("<br/>"), item["archive_url"])
    )
  if data[1] && data[1].hasOwnProperty("bookmarks")
    data[1]["bookmarks"].forEach( (item, idx) ->
      debug(item)
      refreshAudit("bookmark", item["original_id"])
      writeItemToDiv("bookmark", item["status"], item["original_id"], item["messages"].join("<br/>"), item["archive_url"])
    )


@bindImport = (event) ->
  button = $(event.target)
  buttonType = button.attr("data-button")
  type = button.attr("data-type")
  authorId = button.attr("data-author")
  itemId = button.attr("data-item")

  clearAllMessages(authorId)

  authorArticle = $("#author-#{authorId}")
  itemSection = $("##{type}-#{itemId}")
  if authorId
    authorItems = $("#items-#{authorId}")
  else
    authorItems = itemSection.parent()
    authorArticle = authorItems.parent()
  summaryDiv = $("#author-" + authorId + " .author.message")

  if buttonType in ["import", "mark", "dni", "check"]
    disableButton(button)
    disableButton(authorArticle)

    $.ajax
      type: "POST"
      url: button[0]
      dataType: "json"

      success: (data, status, xhr) ->
        enableButton(button)
        enableButton(authorArticle)
        writeSummaryToDiv(data, summaryDiv, status, authorId)

        # Toggle and collapse/expand author based on new import status
        if data[0]["author_imported"]
          authorItems.removeClass("expanded")
          authorItems.addClass("collapse")
          authorArticle.addClass("imported")
        else
          authorItems.removeClass("collapse")
          authorItems.addClass("expanded")
          authorArticle.removeClass("imported")

        switch buttonType
          when "import"
            processImportResponse(data, summaryDiv)

          when "check"
            processImportResponse(data, summaryDiv)

          when "dni"
            if data[0]["dni"] == true
              authorArticle.addClass("do_not_import") if authorId
              itemSection.addClass("do_not_import") if itemId
              button.text "Mark as ALLOW import"
              authorArticle.find("a[data-button='import']").hide()
              itemSection.find("a[data-button='import']").hide()
            else
              authorArticle.removeClass("do_not_import") if authorId
              itemSection.removeClass("do_not_import") if itemId
              button.text "Mark as do NOT import"
              authorArticle.find("a[data-button='import']").show()
              itemImport = itemSection.find("a[data-button='import']")
              itemImport.attr("hidden", false)
              itemImport.show()
            refreshAudit(type, itemId)

          when "mark" # Not currently enabled
            if data[0]["mark"] == true
              authorArticle.addClass("imported")
              itemSection.addClass("imported")
              button.text "Mark as NOT imported"
              $("#author-#{authorId} a[data-button='import']").hide()
              itemSection.find("a[data-button='import']").hide()
            else
              authorArticle.removeClass("imported")
              itemSection.removeClass("imported")
              button.text "Mark as imported"
              $("#author-#{authorId} a[data-button='import']").show()
              itemSection.find("a[data-button='import']").show()
            refreshAudit(type, itemId)

          else
            alert "Unknown button"

      error: (data, status, error) ->
        enableButton(button)
        enableButton(authorArticle)

        message = "<p class=\"alert alert-danger\">An error occurred while processing the request: #{error}</p>"
        summaryDiv.html message
        itemDiv = itemSection.find(" .message")
        itemDiv.html message
        debug(data)

  else if buttonType == "clear"
    clearAllMessages(authorId)

  else if buttonType == "audit"
    refreshAudit(type, id)

  else if buttonType in ["hideAllImported", "showAllImported"]
    if buttonType == "hideAllImported"
      toggleToShowAll()
    else
      toggleToHideAll()

  else
    alert "Unknown button - something is broken!"

  event.preventDefault();
  false


$ ->
  $("body").on("click", "a[data-button]", bindImport)

  $.ajaxSetup {
    beforeSend: (xhr) ->
      xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))
  }

